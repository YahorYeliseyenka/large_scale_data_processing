# https://github.com/getredash/setup/blob/master/data/docker-compose.yml

version: '3.4'

x-redash-service: &redash-service
  image: redash/redash:8.0.0.b32245
  depends_on:
    - postgres
    - redis
  env_file: ./redash-env
  restart: always

services:
  worker:
    build: .
    image: &img worker
    container_name: 'worker'
    command: celery -A worker beat -l INFO
    environment: &env
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672
      - CELERY_RESULT_BACKEND=rpc
      - prometheus_multiproc_dir=/prometheus_multiproc_dir
    depends_on:
      - rabbitmq
    volumes: &volume
      - ./app:/app
      - ./prometheus_multiproc:/prometheus_multiproc_dir

  worker-scraper:
    build: .
    image: *img
    container_name: 'worker-scraper'
    command: celery -A worker_scraper worker -Q default
    environment: *env
    depends_on:
      - rabbitmq
      - worker
    volumes: *volume

  worker-embedding:
    build: .
    image: *img
    container_name: 'worker-embedding'
    command: celery -A worker_embedding worker -Q embedding
    environment: *env
    depends_on:
      - rabbitmq
    volumes: *volume

  worker-db:
    build: .
    image: *img
    container_name: 'worker-db'
    command: celery -A worker_db worker -Q db_worker
    environment: *env
    depends_on:
      - rabbitmq
      - database
    volumes: *volume

  rabbitmq:
    image: rabbitmq:3.8
    container_name: 'rabbitmq'
    logging:
      driver: none

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana
    # restart: unless-stopped
    links:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana

  # metrics:
  #   build: .
  #   image: *img
  #   command: [python, metrics.py]
  #   environment:
  #     - prometheus_multiproc_dir=/prometheus_multiproc_dir
  #   depends_on:
  #     - rabbitmq
  #   volumes:
  #     - ./app:/app
  #     - ./prometheus_multiproc:/prometheus_multiproc_dir
  #   ports:
  #     - 8088:8088

  database:
    image: mongo
    container_name: 'mongodb'
    environment:
      - MONGO_INITDB_DATABASE=dbsubmissions
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - ./mongo_db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo-volume:/data/db
    ports:
      - '27017-27019:27017-27019'
    logging:
      driver: none

  # https://github.com/getredash/setup
  
  server:
    <<: *redash-service
    command: server
    ports:
      - "5000:5000"
    environment:
      REDASH_WEB_WORKERS: 4
  scheduler:
    <<: *redash-service
    container_name: 'scheduler'
    command: scheduler
    environment:
      QUEUES: "celery"
      WORKERS_COUNT: 1
  scheduled_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
  adhoc_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "queries"
      WORKERS_COUNT: 2
  redis:
    image: redis:5.0-alpine
    restart: always
  postgres:
    image: postgres:9.6-alpine
    env_file: ./redash-env
    volumes:
      - ./volumes/redash-postgres-data:/var/lib/postgresql/data
    restart: always
  nginx:
    image: redash/nginx:latest
    ports:
      - "80:80"
    depends_on:
      - server
    links:
      - server:redash
    restart: always